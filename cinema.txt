-- MySQl Code for manage a cinema.
-- create Tables

drop database cinema;
create database cinema;
use cinema;

/*use cinema;*/
-- drop table Advertisement, Genre, Director, Actor, Movie ,MovieGenre, MovieAdvertisement,
-- MovieDirector, MovieActor, Room, ProjectionType, Screening, Food, RoomSeat, Customer, CustomerSeat;

Create table Advertisement(
	addID int,
	brandName varchar(20),
	duration int,
	primary key (addID)
);

-- add Advertisments 

create table Genre(
	genreID int,
	genreName varchar(20),
	primary key (genreID)
);

insert into Genre
values
	(1, 'Drama'),
    (2, 'Thriller'),
    (3, 'Sci-fi'),
    (4, 'Animaton');

select * from Genre;

create table Director(
	directorID int,
	lastName varchar(20),
	firstName varchar(20),
	primary key (directorID)
);

insert into Director
	values 
		(1, 'Singer', 'Bryan '), 
		(2, 'JoonHo ', 'Bong ')
	;

create table Actor(
	actorID int,
	lastName varchar(20),
	firstName varchar(20),
	primary key (actorID)
);

-- add Actors 


Create table Room(
	roomID int,
	capacity int NOT NULL,
	primary key (roomID)
);

-- add Rooms



create table ProjectionType(
	projectionTypeID int,
	projectionTypeName varchar(10),
	price int,
	primary key (projectionTypeID)
);

-- add ProjectionType 


Create Table Food(
	foodID int CHECK (foodID in ( 1, 2 ,3, 4, 5)),
	foodName varchar(20) ,
	typeFood varchar(10) CHECK (typeFood IN ('drink', 'eat','mix')),
	price int,
	primary key (foodID)
);


insert into Food
	values (1,'Coca','Drink',3000),
	(2,'Sprite','Drink',3000),
	(3,'Popcorn','Eatible',5000),
	(4,'Popocorn + Cola','Mix',7000),
	(5,'Candies','Eatible',4000);
    
select * from Food;


create table RoomSeat(
	seatID int,
	roomID int,
	primary key (seatID, roomID)
);

-- add RoomSeat 

Create table Movie(
	movieID int,
	title varchar(50) NOT NULL,
	genreID int,
	directorID int,
	actorID int,
	ageNeeded int NOT NULL,
	duration int,
	primary key(movieID),
	foreign key (directorID) references Director(directorID),
	foreign key (genreID) references Genre(genreID),
	foreign key (actorID) references Movie(movieID)
);

-- add Movies


create table MovieAdvertisement(
advertisementID int,
movieID int,
primary key (AdvertisementID ,movieID)
);

-- add MovieAdvertisment 


-- no sense relation in movie 
create table MovieDirector(
	DirectorID int,
	movieID int,
	primary key (DirectorID ,movieID)
);

-- add MovieDirector 

-- no sense relation in movie 
create table MovieGenre(
	genreID int,
	movieID int,
	primary key (genreID ,movieID)
);

-- add MovieGenre 

create table MovieActor(
	actorID int,
	movieID int,
	primary key (actorID ,movieID)
);

-- add MovieActor 


Create table Screening(
	screeningID int,
	movieID int,
	roomID int,
	first_day date,
	last_day date,
	projectionTypeID int,
	weekDay varchar(10),
	primary key (screeningID, MovieID, RoomID, first_day, last_day),
	foreign key (movieID) references Movie(movieID),
	foreign key (roomID) references Room(roomID),
	foreign key (projectionTypeID) references ProjectionType(projectionTypeID)
);


-- add Screening 


Create Table Customer(
	CustomerID int,
	foodID int ,
	ScreeningID int,
	age int NOT NULL,
	loyaltyProgram bool,
	primary key (CustomerID),
	foreign key (foodID) references Food(foodID),
	foreign key (ScreeningID) references Screening(ScreeningID)
);

-- add Customer 

create table CustomerSeat(
	customerID int,
	seatID int,
	primary key (customerID, seatID)
);

-- add CustomerSeat

